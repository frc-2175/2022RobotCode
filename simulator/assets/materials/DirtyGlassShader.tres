[gd_resource type="VisualShader" load_steps=16 format=2]

[ext_resource path="res://assets/textures/grunge/2K-dirt_2.png" type="Texture" id=1]
[ext_resource path="res://assets/textures/grunge/2K-grunge_1.png" type="Texture" id=2]

[sub_resource type="VisualShaderNodeVectorOp" id=1]

[sub_resource type="VisualShaderNodeColorConstant" id=2]
constant = Color( 0.662109, 0.662109, 0.662109, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=3]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=4]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 1, 1, 1 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=5]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=6]
constant = 0.2

[sub_resource type="VisualShaderNodeScalarConstant" id=7]
constant = 0.5

[sub_resource type="VisualShaderNodeScalarOp" id=8]

[sub_resource type="VisualShaderNodeTexture" id=9]
output_port_for_preview = 0
source = 1

[sub_resource type="VisualShaderNodeInput" id=10]
output_port_for_preview = 0
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeScalarConstant" id=11]
constant = 0.04

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=13]
texture = ExtResource( 2 )

[resource]
code = "shader_type spatial;
render_mode depth_draw_always, specular_schlick_ggx;

uniform sampler2D tex_frg_8;
uniform sampler2D tex_frg_9;



void vertex() {
// Output:0

}

void fragment() {
// Color:14
	vec3 n_out14p0 = vec3(0.662109, 0.662109, 0.662109);
	float n_out14p1 = 1.000000;

// Texture:8
	vec4 tex_frg_8_read = texture(tex_frg_8, UV.xy);
	vec3 n_out8p0 = tex_frg_8_read.rgb;
	float n_out8p1 = tex_frg_8_read.a;

// Scalar:19
	float n_out19p0 = 0.200000;

// VectorOp:16
	vec3 n_out16p0 = n_out8p0 * vec3(n_out19p0);

// Texture:9
	vec4 tex_frg_9_read = texture(tex_frg_9, UV.xy);
	vec3 n_out9p0 = tex_frg_9_read.rgb;
	float n_out9p1 = tex_frg_9_read.a;

// Scalar:20
	float n_out20p0 = 0.500000;

// VectorOp:17
	vec3 n_out17p0 = n_out9p0 * vec3(n_out20p0);

// VectorOp:13
	vec3 n_out13p0 = n_out16p0 + n_out17p0;

// VectorOp:18
	vec3 n_out18p0 = n_out14p0 * n_out13p0;

// Scalar:7
	float n_out7p0 = 0.040000;

// ScalarOp:21
	float n_out21p0 = dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333)) + n_out7p0;

// Input:4
	vec3 n_out4p0 = vec3(SCREEN_UV, 0.0);

// Texture:3
	vec3 n_out3p0;
	float n_out3p1;
	{
		vec4 _tex_read = textureLod(SCREEN_TEXTURE, n_out4p0.xy, 0.0);
		n_out3p0 = _tex_read.rgb;
		n_out3p1 = _tex_read.a;
	}

// Output:0
	ALBEDO = n_out18p0;
	ROUGHNESS = n_out21p0;
	EMISSION = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -1165, 162 )
modes/depth_draw = 1
nodes/fragment/0/position = Vector2( -140, 180 )
nodes/fragment/3/node = SubResource( 9 )
nodes/fragment/3/position = Vector2( -340, 340 )
nodes/fragment/4/node = SubResource( 10 )
nodes/fragment/4/position = Vector2( -560, 360 )
nodes/fragment/7/node = SubResource( 11 )
nodes/fragment/7/position = Vector2( -560, 240 )
nodes/fragment/8/node = SubResource( 12 )
nodes/fragment/8/position = Vector2( -1060, -340 )
nodes/fragment/9/node = SubResource( 13 )
nodes/fragment/9/position = Vector2( -1060, 0 )
nodes/fragment/13/node = SubResource( 1 )
nodes/fragment/13/position = Vector2( -620, -20 )
nodes/fragment/14/node = SubResource( 2 )
nodes/fragment/14/position = Vector2( -580, -140 )
nodes/fragment/16/node = SubResource( 3 )
nodes/fragment/16/position = Vector2( -820, -200 )
nodes/fragment/17/node = SubResource( 4 )
nodes/fragment/17/position = Vector2( -820, 140 )
nodes/fragment/18/node = SubResource( 5 )
nodes/fragment/18/position = Vector2( -420, -80 )
nodes/fragment/19/node = SubResource( 6 )
nodes/fragment/19/position = Vector2( -1040, -100 )
nodes/fragment/20/node = SubResource( 7 )
nodes/fragment/20/position = Vector2( -1040, 240 )
nodes/fragment/21/node = SubResource( 8 )
nodes/fragment/21/position = Vector2( -340, 200 )
nodes/fragment/connections = PoolIntArray( 3, 0, 0, 5, 4, 0, 3, 0, 8, 0, 16, 0, 16, 0, 13, 0, 9, 0, 17, 0, 17, 0, 13, 1, 14, 0, 18, 0, 13, 0, 18, 1, 18, 0, 0, 0, 19, 0, 16, 1, 20, 0, 17, 1, 7, 0, 21, 1, 13, 0, 21, 0, 21, 0, 0, 3 )
